  ______                    _             __
 /_  __/__  _________ ___  (_)___  ____ _/ /
  / / / _ \/ ___/ __ `__ \/ / __ \/ __ `/ /
 / / /  __/ /  / / / / / / / / / / /_/ / /
/_/  \___/_/  /_/ /_/ /_/_/_/ /_/\__,_/_/

   ______                                          __
  / ____/___  ____ ___  ____ ___  ____ _____  ____/ /____   _
 / /   / __ \/ __ `__ \/ __ `__ \/ __ `/ __ \/ __  / ___/  (_)
/ /___/ /_/ / / / / / / / / / / / /_/ / / / / /_/ (__  )  _
\____/\____/_/ /_/ /_/_/ /_/ /_/\__,_/_/ /_/\__,_/____/  (_)

terminal commands:
**make sure you are in home** (should look like this "user@cs-____________-default:/home$
**if there is no home (executing rm -rf /home/ (removing home) fix with: mkdir home, mkdir user, cd user**
cd = change directory // cd change to default directory| cd .. = go back one directory
git clone = copy repo of git directory (how you get shit to use in terminal)
sudo/sudo su = run with elevated priveleges
blue text = directory (use cd to get in)
sudo -s = run terminal as ROOT
exit = to exit out of root, useful if you aren't needing root or do not want to exicute commands in root
ls = check what's inside your terminal
rm = remove => rm -rf / = remove file /home/(filename) *cannot remove directories*
rmdir = remove directory / this is used for when you want ot remove a directory (anything in blue)
rm -rf (remove file) works for directories no need for specifying exact space, just name. /add more with comma or just add other dirs
php = execute .php terminal command target (command ends with php"(i.e. php rhawk.php)
setup.py = python3 setup.py *install*
Ctrl+C = go back/end process
--recursive = get link install = (git clone --recursive *put.full.link.here)/ git pull is used to update module
**error** "no module named ____" => "pip3 install ____"
missing module => pip3 install ____ / or pip install -r requirements.txt
set of requirements (any .txt file something like "requirements.txt") pip3 install -r requirements.txt
mk = make / dir = directory /= mkdir = create directory
.sh = ./ (or) sh ____.sh // use for bash programs ( bash ____.sh)
same as before chmod +x PROGRAM.sh and then execute with ./PROGRAM /(this is better than simply using sh PROGRAM.sh)
tar -xf = unpacking tar (tar.gz) files/folders into the same directory t "tar -xf _____.tar.gz
unzip "foldername" = unzipping and unoacking folder in same dir ".zip" or ".gz" files can be unzipped
chmod +x _____.exe && ./_____.exe = to execute exe file in a directory (must be in specified dir to run)
Docker pull Dockerfile or any other docker presets = pull requirements and prebuilt setup // docker-compose Makefile = run Makefile
To get added programs = apt-get install _____ (usually requires root) (def: $"sudo apt-get install _____"
sudo apt-get helpful programs such as 
neofetch: system info
lolcat: make your terminal colourful
figlet: simple ascii art
nmap: nmap scanning ( use after install nmap "git clone https://github.com/nmap/nmap.git && ./configure && make && make install"
--help can be used for more parameters to be used by such programs (i.e. "neofetch --help")
