terminal commands:
**make sure you are in home** (should look like this "user@cs-____________-default:/home$
**if there is no home (executing rm -rf /home/ (removing home) fix with: mkdir home, mkdir user, cd user**
cd = change directory // cd change to default directory| cd .. = go back one directory
git clone = copy repo of git directory (how you get shit to use in terminal)
sudo/sudo su = run with elevated priveleges
blue text = directory (use cd to get in)
sudo -s = run terminal as ROOT (anything done in ROOT is usually *permanent*)
exit = to exit out of root, useful if you aren't needing root or do not want to exicute commands in root
ls = check what's inside your terminal
rm = remove => rm -rf / = remove file /home/(filename) *cannot remove directories*
rmdir = remove directory / this is used for when you want ot remove a directory (anything in blue)
rm -rf (remove file) works for directories no need for specifying exact space, just name. /add more with comma or just add other dirs
php = execute .php terminal command target (command ends with php"(i.e. php rhawk.php)
setup.py = python3 setup.py *install*
Ctrl+C = go back/end process
--recursive = get link install = (git clone --recursive *put.full.link.here)/ git pull is used to update module
**error** "no module named ____" => "pip3 install ____"
missing module => pip3 install ____
set of requirements (any .txt file something like "requirements.txt") pip3 install -r requirements.txt
mk = make / dir = directory /= mkdir = create directory
.sh = ./ (or) sh ____.sh // use for bash programs ( bash ____.sh)
